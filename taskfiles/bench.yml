version: 3

tasks:
  before:
    cmds:
      - "mkdir -p {{.DIR}}"
      - cmd: "sudo mv -f $NGX_LOG {{.DIR}}"
        ignore_error: true # $NGX_LOG が存在しない場合は無視
      - cmd: "sudo mv -f $MYSQL_LOG {{.DIR}}"
        ignore_error: true # $MYSQL_LOG が存在しない場合は無視
      - task: :db:restart
      - task: :nginx:restart
    vars:
      DIR: "~/logs/{{now | unixEpoch}}"

  dev:
    desc: 実行して準備 (下の行はmysqlなしの場合)
    cmds:
      - task: :bench:echo
      - task: :git:pull-force
      - task: before
      - task: :db:slow-on
      - task: :db:initialize-schema
      - task: :app:dev

  bench:
    desc: ベンチの準備 (下の行はmysqlなしの場合)
    cmds:
      - task: :bench:echo
      - task: :git:pull-force
      - task: before
      - task: :db:slow-on
      - task: :db:initialize-schema
      - task: :app:build
      - task: :app:restart
      - task: :app:log

  local:
    desc: ベンチの準備 (pull-force せずにその時点のコードを反映) (下の行はmysqlなしの場合)
    cmds:
      - task: :bench:echo
      - task: before
      - task: :db:slow-on
      - task: :db:initialize-schema
      - task: :app:build
      - task: :app:restart
      - task: :app:log

  top:
    desc: ベンチの準備 (logの代わりにtop) (下の行はmysqlなしの場合)
    cmds:
      - task: :bench:echo
      - task: :git:pull-force
      - task: before
      - task: :db:slow-on
      - task: :db:initialize-schema
      - task: :app:build
      - task: :app:restart
      - top

  with-pprof:
    desc: ベンチの準備 (pprof を使いたい場合)
    cmds:
      - task: :bench:echo
      - task: before
      - task: :db:slow-on
      - task: :db:initialize-schema
      - task: :app:run-with-pprof

  fin:
    desc: 最終ベンチ (ログの無効) (下の行はmysqlなしの場合)
    cmds:
      - task: :bench:echo
      - task: :git:pull-force
      - task: before
      - task: :db:slow-off
      - task: :netdata:stop
        ignore_error: true # netdataをアンインストールしている場合は無視
      - task: :db:initialize-schema
      - task: :app:build
      - task: :app:restart

  no-log:
    desc: ログ出力はなしでベンチの準備
    cmds:
      - task: :bench:echo
      - task: :git:pull-force
      - task: before
      - task: :app:build
      - task: :app:restart

  echo:
    desc: Discordでベンチ開始を宣言します
    cmds:
      - task: :discord:post
        vars: { MESSAGE: ":bangbang: benchを投げますにゃ" }

  score:
    desc: スコアのコミットとDiscordへの投稿 [スコア]
    cmds:
      - cd $PROJECT_ROOT
      - git add .
      - task: :discord:post
        vars: {
          MESSAGE:
          ":white_check_mark: {{.SCORE}} 点が出ましたにゃ
          ```{{trunc 7 .GIT_COMMIT}}({{.GIT_BRANCH}})
          {{trim .GIT_COMMENT}}```"
        }
      - 'git commit --allow-empty -m "bench (score: {{.SCORE}}) :white_check_mark:"'
      - git push
    vars:
      SCORE: "{{atoi .CLI_ARGS}}"
      GIT_COMMIT:
        sh: git rev-parse HEAD
      GIT_BRANCH:
        sh: git name-rev --name-only HEAD
      GIT_COMMENT:
        sh: git log --format=%B --max-count=1 HEAD
